Модуль CheckOnDestroy
	
	Тест 1

	Цель - проверить, обнаружит ли функция фигуру для уничтожения

	Тип: положительный
	
	1) Входные данные: 7, 7  | Результат: 0
	2) Входные данные: 0, 0  | Результат: 0
	3) Входные данные: 2, 6  | Результат: 0
	4) Входные данные: 6, 2  | Результат: 0
	5) Входные данные: 4, 0  | Результат: 0 

	Тест 2

	Цель - проверить, обнаружит ли функция отсутсвие фигуры

	Тип: негативный
	
	1) Входные данные: 7, 6  | Результат: 1
	2) Входные данные: 0, 7  | Результат: 1
	3) Входные данные: 2, 4  | Результат: 1
	4) Входные данные: 5, 0  | Результат: 1
	5) Входные данные: 3, 2  | Результат: 1

Модуль CreateDamka

        Тест 1

	Цель - проверить, создаст ли дамку функция при выполненных для этого условиях

	Тип: положительный
        
        int gBoard[8][8] = { { 1, 0,-1, 0, 2, 0, 1, 0},
                           { 0, 0, 0,-1, 0, 0, 0, 1},
                           { 1, 0, 0, 0, 0, 0, 1, 0},
                           { 0,-1, 0, 0, 0, 1, 0, 0},
                           { 0, 0, 0, 0, 0, 0, 0, 0},
                           { 0, 0, 0, 0, 0, 0, 0, 0},
                           {-2, 0, 0, 0, 0, 0,-1, 0},
                           { 0, 0, 0, 0, 0,-1, 0, -2} };
	
	1) Входные данные: 0, 0  | Результат: 2
	2) Входные данные: 4, 0  | Результат: 2
	3) Входные данные: 6, 0  | Результат: 2
	4) Входные данные: 7, 7  | Результат: 2
	5) Входные данные: 5, 7  | Результат: 2

	Тест 2

	Цель - проверить, как работает функция при отсутствии возможности создать дамку
	
	Тип: негативный
        
        int gBoard[8][8] = { { 1, 0,-1, 0, 2, 0, 1, 0},
                           { 0, 0, 0,-1, 0, 0, 0, 1},
                           { 1, 0, 0, 0, 0, 0, 1, 0},
                           { 0,-1, 0, 0, 0, 1, 0, 0},
                           { 0, 0, 0, 0, 0, 0, 0, 0},
                           { 0, 0, 0, 0, 0, 0, 0, 0},
                           {-2, 0, 0, 0, 0, 0,-1, 0},
                           { 0, 0, 0, 0, 0,-1, 0, -2} };
	
	1) Входные данные: 2, 0  | Результат: 1
	2) Входные данные: 3, 1  | Результат: 1
	3) Входные данные: 1, 3  | Результат: 1
	4) Входные данные: 0, 6  | Результат: 2
	5) Входные данные: 6, 6  | Результат: 1

	Тест 3

	Цель - проверить, как работает функция при отсутствии фигуры в заданной точке
	
	Тип: негативный
        
        int gBoard[8][8] = { { 1, 0,-1, 0, 2, 0, 1, 0},
                           { 0, 0, 0,-1, 0, 0, 0, 1},
                           { 1, 0, 0, 0, 0, 0, 1, 0},
                           { 0,-1, 0, 0, 0, 1, 0, 0},
                           { 0, 0, 0, 0, 0, 0, 0, 0},
                           { 0, 0, 0, 0, 0, 0, 0, 0},
                           {-2, 0, 0, 0, 0, 0,-1, 0},
                           { 0, 0, 0, 0, 0,-1, 0, -2} };
	
	1) Входные данные: 1, 0  | Результат: 0
	2) Входные данные: 3, 0  | Результат: 0
	3) Входные данные: 7, 5  | Результат: 0
	4) Входные данные: 4, 3  | Результат: 0
	5) Входные данные: 5, 5  | Результат: 0
 
Модуль Checkplace

	Тест 1

	Цель - проверить,отсутсвует ли фигура в заданной точке
	
	Тип: позитивный
        
        int gBoard[8][8] = {
                       {-1, 0,-1, 0,-1, 0,-1, 0},
                       { 0,-1, 0,-1, 0,-1, 0,-1},
                       {-2, 0,-1, 0,-1, 0,-1, 0},
                       { 0, 0, 0, 0, 0, 0, 0, 0},
                       { 0, 0, 0, 0, 0, 0, 0, 0},
                       { 0, 1, 0, 1, 0, 1, 0, 1},
                       { 1, 0, 1, 0, 1, 0, 1, 0},
                       { 0, 1, 0, 1, 0, 1, 0, 1}
                       };
	
	1) Входные данные: 1, 0  | Результат: 1
	2) Входные данные: 7, 2  | Результат: 1
	3) Входные данные: 3, 3  | Результат: 1
	4) Входные данные: 7, 3  | Результат: 1
	5) Входные данные: 6, 4  | Результат: 1

	Тест 2

	Цель - проверить,присутствует ли фигура в заданной точке
	
	Тип: негативный
        
        int gBoard[8][8] = {
                       {-1, 0,-1, 0,-1, 0,-1, 0},
                       { 0,-1, 0,-1, 0,-1, 0,-1},
                       {-2, 0,-1, 0,-1, 0,-1, 0},
                       { 0, 0, 0, 0, 0, 0, 0, 0},
                       { 0, 0, 0, 0, 0, 0, 0, 0},
                       { 0, 1, 0, 1, 0, 1, 0, 1},
                       { 1, 0, 1, 0, 1, 0, 1, 0},
                       { 0, 1, 0, 1, 0, 1, 0, 1}
                       };
	
	1) Входные данные: 5, 5  | Результат: 0
	2) Входные данные: 7, 7  | Результат: 0
	3) Входные данные: 3, 5  | Результат: 0
	4) Входные данные: 7, 1  | Результат: 0
	5) Входные данные: 6, 2  | Результат: 0

Модуль outBoard

	Тест 1

	Цель - проверить,находится ли данная точка в пределах доски
	
	Тип: позитивный
	
	1) Входные данные: 0, 0  | Результат: 1
	2) Входные данные: 1, 1  | Результат: 1
	3) Входные данные: 2, 2  | Результат: 1
	4) Входные данные: 7, 7  | Результат: 1
	5) Входные данные: 2, 3  | Результат: 1
	6) Входные данные: 6, 7  | Результат: 1
	7) Входные данные: 1, 4  | Результат: 1
	8) Входные данные: 5, 4  | Результат: 1
	9) Входные данные: 4, 7  | Результат: 1

	Тест 2

	Цель - проверить,находится ли данная точка за пределами доски
	
	Тип: негативный
	
	1) Входные данные: 10, 15     | Результат: 0
	2) Входные данные: 2, 55      | Результат: 0
	3) Входные данные: -100, -10  | Результат: 0
	4) Входные данные: 17, 16     | Результат: 0
	5) Входные данные: 22, -1     | Результат: 0
	6) Входные данные: 1, -5      | Результат: 0
	7) Входные данные: 8, -1      | Результат: 0
	8) Входные данные: -10, -100  | Результат: 0
	9) Входные данные: 2, -7      | Результат: 0

Модуль move

	Тест 1

	Цель - проверить,передвинется ли фигура в заданную точку
	
	Тип: позитивный
        
        int gBoard[8][8] = {
                       {-1, 0,-1, 0,-1, 0,-1, 0},
                       { 0,-1, 0,-1, 0,-1, 0,-1},
                       {-2, 0,-1, 0,-1, 0,-1, 0},
                       { 0, 0, 0, 0, 0, 0, 0, 0},
                       { 0, 0, 0, 0, 0, 0, 0, 0},
                       { 0, 1, 0, 1, 0, 1, 0, 1},
                       { 1, 0, 1, 0, 1, 0, 1, 0},
                       { 0, 1, 0, 1, 0, 1, 0, 1}
                       };
	
	1.1) Входные данные: 2, 0  | Результат: 0
	1.2) Входные данные: 4, 2  | Результат: -2
	2.1) Входные данные: 5, 7  | Результат: 0
	2.2) Входные данные: 4, 6  | Результат: 1

	Тест 2.1

	Цель - проверить,передвинется ли фигура в заданную точку
	
	Тип: позитивный
        
        int gBoard[8][8] = {
                       {-1, 0,-1, 0,-1, 0,-1, 0},
                       { 0,-1, 0,-1, 0,-1, 0,-1},
                       {-2, 0,-1, 0,-1, 0,-1, 0},
                       { 0, 0, 0, 0, 0, 0, 0, 0},
                       { 0, 0, 0, 0, 0, 0, 0, 0},
                       { 0, 1, 0, 1, 0, 1, 0, 1},
                       { 1, 0, 1, 0, 1, 0, 1, 0},
                       { 0, 1, 0, 1, 0, 1, 0, 1}
                       };
	
	1.1) Входные данные: 2, 2  | Результат: 0
	1.2) Входные данные: 4, 2  | Результат: -1
	2.1) Входные данные: 7, 7  | Результат: 0
	2.2) Входные данные: 4, 5  | Результат: 1

	Тест 2.2

	Цель - проверить,передвинется ли фигура в заданную точку
	
	Тип: позитивный
        
        int gBoard[8][8] = {
                       {-1, 0,-1, 0,-1, 0,-1, 0},
                       { 0,-1, 0,-1, 0,-1, 0,-1},
                       {-2, 0,-1, 0,-1, 0,-1, 0},
                       { 0, 0, 0, 0, 0, 0, 0, 0},
                       { 0, 0, 0, 0, 0, 0, 0, 0},
                       { 0, 1, 0, 1, 0, 1, 0, 1},
                       { 1, 0, 1, 0, 1, 0, 1, 0},
                       { 0, 1, 0, 1, 0, 1, 0, 1}
                       };
	
	1.1) Входные данные: 2, 4  | Результат: 0
	1.2) Входные данные: 4, 7  | Результат: -1
	2.1) Входные данные: 5, 7  | Результат: 0
	2.2) Входные данные: 6, 5  | Результат: 1
	



	      
	